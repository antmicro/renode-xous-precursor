commit 72afdfb159e7043f170200c4a0707e7dd6d9db84
Author: Mateusz Holenko <mholenko@antmicro.com>
Date:   Thu Sep 14 18:33:19 2023 +0200

    Adapt existing peripherals to new API in Renode

diff --git a/emulation/peripherals/BetrustedSpinor.cs b/emulation/peripherals/BetrustedSpinor.cs
index ec4a81f2..bca711ca 100644
--- a/emulation/peripherals/BetrustedSpinor.cs
+++ b/emulation/peripherals/BetrustedSpinor.cs
@@ -148,7 +148,7 @@ namespace Antmicro.Renode.Peripherals.SPI.Betrusted
             }
         }
 
-        private void HandleTxFifoWrite(uint value)
+        private void HandleTxFifoWrite(ulong value)
         {
             txQueue.Enqueue((byte)(value));
             txQueue.Enqueue((byte)(value >> 8));
diff --git a/emulation/peripherals/BetrustedWatchdog.cs b/emulation/peripherals/BetrustedWatchdog.cs
index 1f852288..7b2d0ea2 100644
--- a/emulation/peripherals/BetrustedWatchdog.cs
+++ b/emulation/peripherals/BetrustedWatchdog.cs
@@ -77,9 +77,9 @@ namespace Antmicro.Renode.Peripherals.Timers.Betrusted
         }
 
         // Convert "approximately 65MHz" ticks to milliseconds
-        private uint XilinxClockToMs(uint xilinx_clocks)
+        private uint XilinxClockToMs(ulong xilinx_clocks)
         {
-            uint adjusted = (uint)((((ulong)xilinx_clocks) * 100) / 65000000);
+            uint adjusted = (uint)((xilinx_clocks * 100) / 65000000);
             this.Log(LogLevel.Debug, "Watchdog timer set for {0}. Will expire after {1} msec", xilinx_clocks, adjusted * 10);
             return adjusted;
         }
diff --git a/emulation/peripherals/LiteX_Timer_32.cs b/emulation/peripherals/LiteX_Timer_32.cs
index d458cb2d..c85124a2 100644
--- a/emulation/peripherals/LiteX_Timer_32.cs
+++ b/emulation/peripherals/LiteX_Timer_32.cs
@@ -113,8 +113,8 @@ namespace Antmicro.Renode.Peripherals.Timers.Betrusted
         private IFlagRegisterField irqPending;
 
         private uint latchedValue;
-        private uint loadValue;
-        private uint reloadValue;
+        private ulong loadValue;
+        private ulong reloadValue;
 
         private readonly LimitTimer innerTimer;
 
diff --git a/emulation/peripherals/WF200.cs b/emulation/peripherals/WF200.cs
index 92cd5534..923ae92e 100644
--- a/emulation/peripherals/WF200.cs
+++ b/emulation/peripherals/WF200.cs
@@ -456,7 +456,7 @@ namespace Antmicro.Renode.Peripherals.Network.Betrusted
                     break;
                 case Registers.SharedRamPort:
                     {
-                        uint val = 0;
+                        ulong val = 0;
                         switch (MemoryAddress.Value)
                         {
                             case 0x09004000:
@@ -556,7 +556,7 @@ namespace Antmicro.Renode.Peripherals.Network.Betrusted
                             logLevel = LogLevel.Noisy;
                         }
                         this.Log(logLevel, "Updating value of \"{0}\" from {1:X8} -> {2:X8}", spiAddress, existing, val);
-                        RegistersCollection.Write((long)spiAddress, val);
+                        RegistersCollection.Write((long)spiAddress, (uint)val);
 
                         break;
                     }
@@ -806,7 +806,7 @@ namespace Antmicro.Renode.Peripherals.Network.Betrusted
             }
         }
 
-        private uint GetWriteRegister(uint val, uint order)
+        private ulong GetWriteRegister(ulong val, ulong order)
         {
             if (order == 0)
             {
@@ -910,7 +910,7 @@ namespace Antmicro.Renode.Peripherals.Network.Betrusted
         private IFlagRegisterField CpuClockDisable;
         private IFlagRegisterField DirectAccessMode;
         private IFlagRegisterField CpuReset;
-        private uint downloadOffset;
+        private ulong downloadOffset;
         private Queue<WfxMessage> pendingTxMessages;
 
         private enum Mode
diff --git a/emulation/peripherals/keyrom.cs b/emulation/peripherals/keyrom.cs
index 30bd41e4..e0e51884 100644
--- a/emulation/peripherals/keyrom.cs
+++ b/emulation/peripherals/keyrom.cs
@@ -326,7 +326,7 @@ namespace Antmicro.Renode.Peripherals.Miscellaneous.Betrusted
             this.lockAddress = 0;
         }
 
-        private uint address;
+        private ulong address;
         private UInt32[] data;
         private bool[] locked;
         private uint lockAddress;
